package example

import chisel3._
import chisel3.util._

class axi_register_slice_light extends BlackBox {
  val io = IO(new Bundle {
    val aclk          = Input(Bool())
    val aresetn       = Input(Bool())
    val s_axi_awaddr  = Input(UInt(32.W))
    val s_axi_awprot  = Input(UInt(3.W))
    val s_axi_awvalid = Input(Bool())
    val s_axi_awready = Output(Bool())
    val s_axi_wdata   = Input(UInt(32.W))
    val s_axi_wstrb   = Input(UInt(4.W))
    val s_axi_wvalid  = Input(Bool())
    val s_axi_wready  = Output(Bool())
    val s_axi_bresp   = Output(UInt(2.W))
    val s_axi_bvalid  = Output(Bool())
    val s_axi_bready  = Input(Bool())
    val s_axi_araddr  = Input(UInt(32.W))
    val s_axi_arprot  = Input(UInt(3.W))
    val s_axi_arvalid = Input(Bool())
    val s_axi_arready = Output(Bool())
    val s_axi_rdata   = Output(UInt(32.W))
    val s_axi_rresp   = Output(UInt(2.W))
    val s_axi_rvalid  = Output(Bool())
    val s_axi_rready  = Input(Bool())
    val m_axi_awaddr  = Output(UInt(32.W))
    val m_axi_awprot  = Output(UInt(3.W))
    val m_axi_awvalid = Output(Bool())
    val m_axi_awready = Input(Bool())
    val m_axi_wdata   = Output(UInt(32.W))
    val m_axi_wstrb   = Output(UInt(4.W))
    val m_axi_wvalid  = Output(Bool())
    val m_axi_wready  = Input(Bool())
    val m_axi_bresp   = Input(UInt(2.W))
    val m_axi_bvalid  = Input(Bool())
    val m_axi_bready  = Output(Bool())
    val m_axi_araddr  = Output(UInt(32.W))
    val m_axi_arprot  = Output(UInt(3.W))
    val m_axi_arvalid = Output(Bool())
    val m_axi_arready = Input(Bool())
    val m_axi_rdata   = Input(UInt(32.W))
    val m_axi_rresp   = Input(UInt(2.W))
    val m_axi_rvalid  = Input(Bool())
    val m_axi_rready  = Output(Bool())
  })
}
